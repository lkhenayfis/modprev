% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/misc.r
\name{localizaconf}
\alias{localizaconf}
\title{Detecção De Arquivo De Configuração}
\usage{
localizaconf(path, arq = "conf.jsonc")
}
\arguments{
\item{path}{caminho completo até o diretório onde o arquivo de configuração se encontra.}

\item{arq}{o nome do arquivo, com extensão. O nome pode variar, mas deve necessariamente ser um
"json" ou "jsonc"}
}
\value{
lista contendo o caminho ate arquivo localizado no primeiro elemento e lista de
configuracoes no segundo
}
\description{
Busca arquivo de configuração segundo regras que contemplam a execução operacional
}
\details{
Esta função não é necessária para uso do pacote. Ela existe e é fornecida apenas para facilitar
as distintas aplicações, removendo a necessidade de repetir esse código para achar a configuração
em todos os arquivos. Cada aplicação terá seu conjunto de configurações necessárias, de modo que
isto deve ser especificado claramente nos projetos em si, não aqui.

A função executa uma busca simples por um arquivo de configuração chamado \code{arq} em um
search path de dois níveis principais:
\enumerate{
\item diretório de trabalho atual
\item diretório um nível acima do de trabalho
}

A cada nível será checado se existe o aquivo \code{arq} e, alternativamente, se existem os
diretórios 'conf', 'config' ou 'confs' no nível que possam conter \code{arq}.

O argumento \code{path} permite informar diretamente o caminho até o \bold{diretório} que contém
\code{arq}. Caso seja fornecido, um novo nível será adicionado no topo do search path
correspondendo ao caminho informado no argumento \code{path}.

Normalmente \code{path} não tem muita utilidade. Em rodadas interativas ou por cmd apenas os dois
níveis padrão são necessários. No código principal o caminho do script já deve ser conhecido para
execução, de modo que a busca por configuração em referência a ele é simples
}
